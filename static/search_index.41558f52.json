[{"id":0,"title":"","content":"","routePath":"/official/api/","lang":"","toc":[],"domain":"","frontmatter":{"pageType":"custom"},"version":""},{"id":1,"title":"元编程","content":"#\n\n元编程本质上是一种编程范式，它允许程序在运行时或编译时生成、修改或操作其他程序（包括它自身）的代码、结构或行为。\n\n元编程为开发者提供了强大的工具和灵活性，以动态地操作和扩展应用程序。装饰器和反射API、TypeScript编译器API，都是在 NestJS\n中常用的实现元编程的策略。\n\n下面，我将对这几种方式进行详细介绍：\n\n\n装饰器和反射API#\n\n创建元数据装饰器\n\n\n\n使用 ModulesContainer 获取所有模块从中获取我们感兴趣的控制器类，然后通过 MetadataScanner 扫描该控制器的所有方法。\n\n\n\n提示\n\n需要先导入 DiscoveryModule 才能使用使用 ModulesContainer 和 MetadataScanner。\n\n\n\n\nTypeScript编译器API#\n\n为了简单起见我们使用 ts-morph 操作 TypeScript 编译器API\n\n加载所有源文件\n\n\n\n可针对感兴趣的文件进行操作\n\n\n\n提示\n\n获取类的所有属性（包括继承的属性）\n\n","routePath":"/official/guide/backend/blogs/metadata","lang":"","toc":[{"text":"装饰器和反射API","id":"装饰器和反射api","depth":2,"charIndex":168},{"text":"TypeScript编译器API","id":"typescript编译器api","depth":2,"charIndex":343}],"domain":"","frontmatter":{},"version":""},{"id":2,"title":"动态模块","content":"#\n\n使用模块是构建高效、可维护和可扩展的应用程序的关键所在。模块使得开发者能够清晰地分离关注点，将应用程序的不同部分封装到独立的模块中。\n\n以日志模块为例，展示如何创建一个标准的 NestJS 动态模块，以下是详细的步骤指南：\n\n\n目录结构#\n\n首先，你需要为日志模块创建一个基本的文件结构。这通常包括一个模块文件（如 logger.module.ts）、一个服务文件（如\nlogger.service.ts），以及可能需要的接口（interfaces）和适配器（adapters）。\n\n\n\n\n定义接口#\n\n定义服务需要实现的 ILogger 接口，这里直接继承自 Nest 内部提供的 LoggerService 接口。\n\n\n\n在 logger.service.ts 文件中，通过模块配置将具体的实现类传递给服务。\n\n\n\n\n实现服务#\n\nWinstonAdapter 使用 winston 实现实际的日志记录功能，比如将日志信息输出到控制台、文件或其他日志存储系统。\n\n\n\n\n构建模块#\n\nNestJS 提供了一个 ConfigurableModuleBuilder 类用于便捷的构建动态模块的配置。\n\n\n\n使用 @Module 装饰器来定义日志模块。这个模块将包含日志服务作为提供者，并可以配置为动态模块，以便在应用程序的不同部分中按需加载。\n\n\n\n\n注册模块#\n\n由于它是一个动态模块，你可以使用 LoggerModule.register() 或 LoggerModule.registerAsync()\n方法在根模块或其他模块中导入它。\n\n\n\n\n使用服务#\n\n最后，你可以在需要记录日志的地方注入 LoggerService 并使用它的方法。这可以通过构造函数注入或其他依赖注入机制来实现。\n在这个日志模块中，我们通过适配器模式实现了对Winston日志库的封装，使得日志服务能够灵活地切换到不同的日志框架，而无需修改服务调用方的代码。\n\n","routePath":"/official/guide/backend/blogs/module","lang":"","toc":[{"text":"目录结构","id":"目录结构","depth":2,"charIndex":116},{"text":"定义接口","id":"定义接口","depth":2,"charIndex":247},{"text":"实现服务","id":"实现服务","depth":2,"charIndex":363},{"text":"构建模块","id":"构建模块","depth":2,"charIndex":439},{"text":"注册模块","id":"注册模块","depth":2,"charIndex":578},{"text":"使用服务","id":"使用服务","depth":2,"charIndex":678}],"domain":"","frontmatter":{},"version":""},{"id":3,"title":"日志模块","content":"#\n\nLoggerModule 是一个为 NestJS 应用提供灵活日志记录功能的模块。它封装了常用的日志记录库（如\nwinston），并提供了易于使用的接口，使开发者能够在整个 NestJS 应用中统一和高效地记录日志。\n\n\n安装#\n\n提示\n\n安装对应适配器的依赖\n\n\n使用#\n\n导入并注册 LoggerModule\n\n\n\n使用构造函数注入\n\n\n\n使用属性注入\n\n","routePath":"/official/guide/backend/components/logger","lang":"","toc":[{"text":"安装","id":"安装","depth":2,"charIndex":113},{"text":"使用","id":"使用","depth":2,"charIndex":135}],"domain":"","frontmatter":{},"version":""},{"id":4,"title":"介绍","content":"#\n\nHikeStack 是一组精心挑选的工具集，旨在运用最前沿的语言特性和开发工具，帮助开发者轻松构建出强大而稳健的 TypeScript 应用。\n\n\n后端：高效、可维护的 Nest 模块#\n\n在后端方面，HikeStack 充分利用了 TypeScript 的强大类型系统和 NestJS 框架的模块化设计。TypeScript\n的类型系统为开发者提供了强大的类型检查和代码智能提示功能，使得代码更加健壮和易于维护。而 NestJS\n框架则以其优雅的模块化设计著称，它允许开发者将应用程序的不同部分封装到独立的模块中，从而实现了清晰的分离关注点和代码复用。通过结合 TypeScript 和\nNestJS，HikeStack 使得开发者能够轻松地编写高效、可维护的 Nest 模块，为后端服务提供坚实的支撑。\n\n\n前端：丰富的 UI 组件和灵活的样式定制#\n\n在前端方面，HikeStack 则采用了流行的 Tailwind CSS 框架和 ShadcnUI 的 React 组件库。Tailwind CSS\n是一个功能强大、灵活易用的 CSS 框架，它提供了一套实用的 CSS 类，使得开发者能够快速地构建出响应式、美观的页面布局。而 ShadcnUI 则是一个基于\nReact 的 UI 组件库，它提供了一系列高质量的 UI 组件，如按钮、表单、对话框等，使得开发者能够轻松地构建出用户友好的界面。通过结合 Tailwind\nCSS 和 ShadcnUI，HikeStack 为开发者提供了丰富的 UI 组件和灵活的样式定制能力，从而极大地提升了前端开发效率和用户体验。\n\n\n总结#\n\nHikeStack致力于成为开发者在构建高性能、可扩展 TypeScript 应用时的得力助手，帮助开发者快速构建出高质量、可扩展的 TypeScript\n应用。","routePath":"/official/guide/introduction","lang":"","toc":[{"text":"后端：高效、可维护的 Nest 模块","id":"后端高效可维护的-nest-模块","depth":2,"charIndex":76},{"text":"前端：丰富的 UI 组件和灵活的样式定制","id":"前端丰富的-ui-组件和灵活的样式定制","depth":2,"charIndex":358},{"text":"总结","id":"总结","depth":2,"charIndex":691}],"domain":"","frontmatter":{},"version":""},{"id":6,"title":"Class: LoggerModule","content":"@hikestack/logger • Docs\n\n--------------------------------------------------------------------------------\n\n@hikestack/logger / LoggerModule\n\n\nClass: LoggerModule#\n\n\nExtends#\n\n * ConfigurableModuleClass\n\n\nConstructors#\n\n\nnew LoggerModule()#\n\n> new LoggerModule(): LoggerModule\n\nReturns#\n\nLoggerModule\n\nInherited from#\n\nConfigurableModuleClass.constructor\n\nDefined in#\n\nnode_modules/.pnpm/@nestjs+common@10.4.1_class-transformer@0.5.1_class-validator\n@0.14.1_reflect-metadata@0.2.2_rxjs@7.8.1/node_modules/@nestjs/common/module-uti\nls/interfaces/configurable-module-cls.interface.d.ts:12\n\n\nMethods#\n\n\nregister()#\n\n> static register(options): DynamicModule\n\nParameters#\n\n• options: LoggerModuleOptions & Partial<object>\n\nReturns#\n\nDynamicModule\n\nOverrides#\n\nConfigurableModuleClass.register\n\nDefined in#\n\npackages/logger/src/logger.module.ts:14\n\n--------------------------------------------------------------------------------\n\n\nregisterAsync()#\n\n> static registerAsync(options): DynamicModule\n\nParameters#\n\n• options: ConfigurableModuleAsyncOptions<LoggerModuleOptions, \"create\"> &\nPartial<object>\n\nReturns#\n\nDynamicModule\n\nOverrides#\n\nConfigurableModuleClass.registerAsync\n\nDefined in#\n\npackages/logger/src/logger.module.ts:20","routePath":"/official/reference/logger/classes/LoggerModule","lang":"","toc":[{"text":"Extends","id":"extends","depth":2,"charIndex":165},{"text":"Constructors","id":"constructors","depth":2,"charIndex":204},{"text":"new LoggerModule()","id":"new-loggermodule","depth":3,"charIndex":220},{"text":"Returns","id":"returns","depth":4,"charIndex":277},{"text":"Inherited from","id":"inherited-from","depth":4,"charIndex":301},{"text":"Defined in","id":"defined-in","depth":4,"charIndex":355},{"text":"Methods","id":"methods","depth":2,"charIndex":588},{"text":"register()","id":"register","depth":3,"charIndex":599},{"text":"Parameters","id":"parameters","depth":4,"charIndex":655},{"text":"Returns","id":"returns-1","depth":4,"charIndex":718},{"text":"Overrides","id":"overrides","depth":4,"charIndex":743},{"text":"Defined in","id":"defined-in-1","depth":4,"charIndex":789},{"text":"registerAsync()","id":"registerasync","depth":3,"charIndex":926},{"text":"Parameters","id":"parameters-1","depth":4,"charIndex":992},{"text":"Returns","id":"returns-2","depth":4,"charIndex":1097},{"text":"Overrides","id":"overrides-1","depth":4,"charIndex":1122},{"text":"Defined in","id":"defined-in-2","depth":4,"charIndex":1173}],"domain":"","frontmatter":{},"version":""},{"id":7,"title":"Class: LoggerService","content":"@hikestack/logger • Docs\n\n--------------------------------------------------------------------------------\n\n@hikestack/logger / LoggerService\n\n\nClass: LoggerService#\n\n\nImplements#\n\n * ILogger\n\n\nConstructors#\n\n\nnew LoggerService()#\n\n> new LoggerService(options): LoggerService\n\nParameters#\n\n• options: LoggerModuleOptions\n\nReturns#\n\nLoggerService\n\nDefined in#\n\npackages/logger/src/logger.service.ts:8\n\n\nProperties#\n\n\nlogger#\n\n> protected readonly logger: ILogger\n\nDefined in#\n\npackages/logger/src/logger.service.ts:7\n\n\nMethods#\n\n\nerror()#\n\n> error(message, ...optionalParams): void\n\nWrite an 'error' level log.\n\nParameters#\n\n• message: any\n\n• ...optionalParams: any[]\n\nReturns#\n\nvoid\n\nImplementation of#\n\nILogger.error\n\nDefined in#\n\npackages/logger/src/logger.service.ts:22\n\n--------------------------------------------------------------------------------\n\n\nlog()#\n\n> log(message, ...optionalParams): void\n\nWrite a 'log' level log.\n\nParameters#\n\n• message: any\n\n• ...optionalParams: any[]\n\nReturns#\n\nvoid\n\nImplementation of#\n\nILogger.log\n\nDefined in#\n\npackages/logger/src/logger.service.ts:18\n\n--------------------------------------------------------------------------------\n\n\nwarn()#\n\n> warn(message, ...optionalParams): void\n\nWrite a 'warn' level log.\n\nParameters#\n\n• message: any\n\n• ...optionalParams: any[]\n\nReturns#\n\nvoid\n\nImplementation of#\n\nILogger.warn\n\nDefined in#\n\npackages/logger/src/logger.service.ts:26","routePath":"/official/reference/logger/classes/LoggerService","lang":"","toc":[{"text":"Implements","id":"implements","depth":2,"charIndex":167},{"text":"Constructors","id":"constructors","depth":2,"charIndex":193},{"text":"new LoggerService()","id":"new-loggerservice","depth":3,"charIndex":209},{"text":"Parameters","id":"parameters","depth":4,"charIndex":276},{"text":"Returns","id":"returns","depth":4,"charIndex":321},{"text":"Defined in","id":"defined-in","depth":4,"charIndex":346},{"text":"Properties","id":"properties","depth":2,"charIndex":401},{"text":"logger","id":"logger","depth":3,"charIndex":415},{"text":"Defined in","id":"defined-in-1","depth":4,"charIndex":462},{"text":"Methods","id":"methods","depth":2,"charIndex":517},{"text":"error()","id":"error","depth":3,"charIndex":528},{"text":"Parameters","id":"parameters-1","depth":4,"charIndex":610},{"text":"Returns","id":"returns-1","depth":4,"charIndex":667},{"text":"Implementation of","id":"implementation-of","depth":4,"charIndex":683},{"text":"Defined in","id":"defined-in-2","depth":4,"charIndex":718},{"text":"log()","id":"log","depth":3,"charIndex":856},{"text":"Parameters","id":"parameters-2","depth":4,"charIndex":931},{"text":"Returns","id":"returns-2","depth":4,"charIndex":988},{"text":"Implementation of","id":"implementation-of-1","depth":4,"charIndex":1004},{"text":"Defined in","id":"defined-in-3","depth":4,"charIndex":1037},{"text":"warn()","id":"warn","depth":3,"charIndex":1175},{"text":"Parameters","id":"parameters-3","depth":4,"charIndex":1253},{"text":"Returns","id":"returns-3","depth":4,"charIndex":1310},{"text":"Implementation of","id":"implementation-of-2","depth":4,"charIndex":1326},{"text":"Defined in","id":"defined-in-4","depth":4,"charIndex":1360}],"domain":"","frontmatter":{},"version":""},{"id":8,"title":"Class: WinstonAdapter","content":"@hikestack/logger • Docs\n\n--------------------------------------------------------------------------------\n\n@hikestack/logger / WinstonAdapter\n\n\nClass: WinstonAdapter#\n\n\nImplements#\n\n * ILogger\n\n\nConstructors#\n\n\nnew WinstonAdapter()#\n\n> new WinstonAdapter(options): WinstonAdapter\n\nParameters#\n\n• options: LoggerOptions\n\nReturns#\n\nWinstonAdapter\n\nDefined in#\n\npackages/logger/src/adapters/winston/winston.adapter.ts:8\n\n\nProperties#\n\n\nlogger#\n\n> protected readonly logger: Logger\n\nDefined in#\n\npackages/logger/src/adapters/winston/winston.adapter.ts:6\n\n\nMethods#\n\n\nerror()#\n\n> error(message, ...optionalParams): void\n\nWrite an 'error' level log.\n\nParameters#\n\n• message: any\n\n• ...optionalParams: any[]\n\nReturns#\n\nvoid\n\nImplementation of#\n\nILogger.error\n\nDefined in#\n\npackages/logger/src/adapters/winston/winston.adapter.ts:16\n\n--------------------------------------------------------------------------------\n\n\nlog()#\n\n> log(message, ...optionalParams): void\n\nWrite a 'log' level log.\n\nParameters#\n\n• message: any\n\n• ...optionalParams: any[]\n\nReturns#\n\nvoid\n\nImplementation of#\n\nILogger.log\n\nDefined in#\n\npackages/logger/src/adapters/winston/winston.adapter.ts:12\n\n--------------------------------------------------------------------------------\n\n\nwarn()#\n\n> warn(message, ...optionalParams): void\n\nWrite a 'warn' level log.\n\nParameters#\n\n• message: any\n\n• ...optionalParams: any[]\n\nReturns#\n\nvoid\n\nImplementation of#\n\nILogger.warn\n\nDefined in#\n\npackages/logger/src/adapters/winston/winston.adapter.ts:20","routePath":"/official/reference/logger/classes/WinstonAdapter","lang":"","toc":[{"text":"Implements","id":"implements","depth":2,"charIndex":169},{"text":"Constructors","id":"constructors","depth":2,"charIndex":195},{"text":"new WinstonAdapter()","id":"new-winstonadapter","depth":3,"charIndex":211},{"text":"Parameters","id":"parameters","depth":4,"charIndex":281},{"text":"Returns","id":"returns","depth":4,"charIndex":320},{"text":"Defined in","id":"defined-in","depth":4,"charIndex":346},{"text":"Properties","id":"properties","depth":2,"charIndex":419},{"text":"logger","id":"logger","depth":3,"charIndex":433},{"text":"Defined in","id":"defined-in-1","depth":4,"charIndex":479},{"text":"Methods","id":"methods","depth":2,"charIndex":552},{"text":"error()","id":"error","depth":3,"charIndex":563},{"text":"Parameters","id":"parameters-1","depth":4,"charIndex":645},{"text":"Returns","id":"returns-1","depth":4,"charIndex":702},{"text":"Implementation of","id":"implementation-of","depth":4,"charIndex":718},{"text":"Defined in","id":"defined-in-2","depth":4,"charIndex":753},{"text":"log()","id":"log","depth":3,"charIndex":909},{"text":"Parameters","id":"parameters-2","depth":4,"charIndex":984},{"text":"Returns","id":"returns-2","depth":4,"charIndex":1041},{"text":"Implementation of","id":"implementation-of-1","depth":4,"charIndex":1057},{"text":"Defined in","id":"defined-in-3","depth":4,"charIndex":1090},{"text":"warn()","id":"warn","depth":3,"charIndex":1246},{"text":"Parameters","id":"parameters-3","depth":4,"charIndex":1324},{"text":"Returns","id":"returns-3","depth":4,"charIndex":1381},{"text":"Implementation of","id":"implementation-of-2","depth":4,"charIndex":1397},{"text":"Defined in","id":"defined-in-4","depth":4,"charIndex":1431}],"domain":"","frontmatter":{},"version":""},{"id":9,"title":"@hikestack/logger","content":" • Docs\n\n--------------------------------------------------------------------------------\n\n\n@hikestack/logger#\n\n\nClasses#\n\n * LoggerModule\n * LoggerService\n * WinstonAdapter\n\n\nInterfaces#\n\n * ILogger\n * LoggerModuleOptions","routePath":"/official/reference/logger/globals","lang":"","toc":[{"text":"Classes","id":"classes","depth":2,"charIndex":112},{"text":"Interfaces","id":"interfaces","depth":2,"charIndex":175}],"domain":"","frontmatter":{},"version":""},{"id":10,"title":"HikeStack","content":"@hikestack/logger • Docs\n\n--------------------------------------------------------------------------------\n\n\nHikeStack#\n\nHikeStack is a high-performance and scalable TypeScript tool set","routePath":"/official/reference/logger/","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":11,"title":"Interface: ILogger","content":"@hikestack/logger • Docs\n\n--------------------------------------------------------------------------------\n\n@hikestack/logger / ILogger\n\n\nInterface: ILogger#\n\n\nExtends#\n\n * LoggerService\n\n\nMethods#\n\n\ndebug()?#\n\n> optional debug(message, ...optionalParams): any\n\nWrite a 'debug' level log.\n\nParameters#\n\n• message: any\n\n• ...optionalParams: any[]\n\nReturns#\n\nany\n\nInherited from#\n\nLoggerService.debug\n\nDefined in#\n\nnode_modules/.pnpm/@nestjs+common@10.4.1_class-transformer@0.5.1_class-validator\n@0.14.1_reflect-metadata@0.2.2_rxjs@7.8.1/node_modules/@nestjs/common/services/l\nogger.service.d.ts:24\n\n--------------------------------------------------------------------------------\n\n\nerror()#\n\n> error(message, ...optionalParams): any\n\nWrite an 'error' level log.\n\nParameters#\n\n• message: any\n\n• ...optionalParams: any[]\n\nReturns#\n\nany\n\nInherited from#\n\nLoggerService.error\n\nDefined in#\n\nnode_modules/.pnpm/@nestjs+common@10.4.1_class-transformer@0.5.1_class-validator\n@0.14.1_reflect-metadata@0.2.2_rxjs@7.8.1/node_modules/@nestjs/common/services/l\nogger.service.d.ts:16\n\n--------------------------------------------------------------------------------\n\n\nfatal()?#\n\n> optional fatal(message, ...optionalParams): any\n\nWrite a 'fatal' level log.\n\nParameters#\n\n• message: any\n\n• ...optionalParams: any[]\n\nReturns#\n\nany\n\nInherited from#\n\nLoggerService.fatal\n\nDefined in#\n\nnode_modules/.pnpm/@nestjs+common@10.4.1_class-transformer@0.5.1_class-validator\n@0.14.1_reflect-metadata@0.2.2_rxjs@7.8.1/node_modules/@nestjs/common/services/l\nogger.service.d.ts:32\n\n--------------------------------------------------------------------------------\n\n\nlog()#\n\n> log(message, ...optionalParams): any\n\nWrite a 'log' level log.\n\nParameters#\n\n• message: any\n\n• ...optionalParams: any[]\n\nReturns#\n\nany\n\nInherited from#\n\nLoggerService.log\n\nDefined in#\n\nnode_modules/.pnpm/@nestjs+common@10.4.1_class-transformer@0.5.1_class-validator\n@0.14.1_reflect-metadata@0.2.2_rxjs@7.8.1/node_modules/@nestjs/common/services/l\nogger.service.d.ts:12\n\n--------------------------------------------------------------------------------\n\n\nsetLogLevels()?#\n\n> optional setLogLevels(levels): any\n\nSet log levels.\n\nParameters#\n\n• levels: LogLevel[]\n\nlog levels\n\nReturns#\n\nany\n\nInherited from#\n\nLoggerService.setLogLevels\n\nDefined in#\n\nnode_modules/.pnpm/@nestjs+common@10.4.1_class-transformer@0.5.1_class-validator\n@0.14.1_reflect-metadata@0.2.2_rxjs@7.8.1/node_modules/@nestjs/common/services/l\nogger.service.d.ts:37\n\n--------------------------------------------------------------------------------\n\n\nverbose()?#\n\n> optional verbose(message, ...optionalParams): any\n\nWrite a 'verbose' level log.\n\nParameters#\n\n• message: any\n\n• ...optionalParams: any[]\n\nReturns#\n\nany\n\nInherited from#\n\nLoggerService.verbose\n\nDefined in#\n\nnode_modules/.pnpm/@nestjs+common@10.4.1_class-transformer@0.5.1_class-validator\n@0.14.1_reflect-metadata@0.2.2_rxjs@7.8.1/node_modules/@nestjs/common/services/l\nogger.service.d.ts:28\n\n--------------------------------------------------------------------------------\n\n\nwarn()#\n\n> warn(message, ...optionalParams): any\n\nWrite a 'warn' level log.\n\nParameters#\n\n• message: any\n\n• ...optionalParams: any[]\n\nReturns#\n\nany\n\nInherited from#\n\nLoggerService.warn\n\nDefined in#\n\nnode_modules/.pnpm/@nestjs+common@10.4.1_class-transformer@0.5.1_class-validator\n@0.14.1_reflect-metadata@0.2.2_rxjs@7.8.1/node_modules/@nestjs/common/services/l\nogger.service.d.ts:20","routePath":"/official/reference/logger/interfaces/ILogger","lang":"","toc":[{"text":"Extends","id":"extends","depth":2,"charIndex":159},{"text":"Methods","id":"methods","depth":2,"charIndex":188},{"text":"debug()?","id":"debug","depth":3,"charIndex":199},{"text":"Parameters","id":"parameters","depth":4,"charIndex":289},{"text":"Returns","id":"returns","depth":4,"charIndex":346},{"text":"Inherited from","id":"inherited-from","depth":4,"charIndex":361},{"text":"Defined in","id":"defined-in","depth":4,"charIndex":399},{"text":"error()","id":"error","depth":3,"charIndex":680},{"text":"Parameters","id":"parameters-1","depth":4,"charIndex":761},{"text":"Returns","id":"returns-1","depth":4,"charIndex":818},{"text":"Inherited from","id":"inherited-from-1","depth":4,"charIndex":833},{"text":"Defined in","id":"defined-in-1","depth":4,"charIndex":871},{"text":"fatal()?","id":"fatal","depth":3,"charIndex":1152},{"text":"Parameters","id":"parameters-2","depth":4,"charIndex":1242},{"text":"Returns","id":"returns-2","depth":4,"charIndex":1299},{"text":"Inherited from","id":"inherited-from-2","depth":4,"charIndex":1314},{"text":"Defined in","id":"defined-in-2","depth":4,"charIndex":1352},{"text":"log()","id":"log","depth":3,"charIndex":1633},{"text":"Parameters","id":"parameters-3","depth":4,"charIndex":1707},{"text":"Returns","id":"returns-3","depth":4,"charIndex":1764},{"text":"Inherited from","id":"inherited-from-3","depth":4,"charIndex":1779},{"text":"Defined in","id":"defined-in-3","depth":4,"charIndex":1815},{"text":"setLogLevels()?","id":"setloglevels","depth":3,"charIndex":2096},{"text":"Parameters","id":"parameters-4","depth":4,"charIndex":2169},{"text":"Returns","id":"returns-4","depth":4,"charIndex":2216},{"text":"Inherited from","id":"inherited-from-4","depth":4,"charIndex":2231},{"text":"Defined in","id":"defined-in-4","depth":4,"charIndex":2276},{"text":"verbose()?","id":"verbose","depth":3,"charIndex":2557},{"text":"Parameters","id":"parameters-5","depth":4,"charIndex":2653},{"text":"Returns","id":"returns-5","depth":4,"charIndex":2710},{"text":"Inherited from","id":"inherited-from-5","depth":4,"charIndex":2725},{"text":"Defined in","id":"defined-in-5","depth":4,"charIndex":2765},{"text":"warn()","id":"warn","depth":3,"charIndex":3046},{"text":"Parameters","id":"parameters-6","depth":4,"charIndex":3123},{"text":"Returns","id":"returns-6","depth":4,"charIndex":3180},{"text":"Inherited from","id":"inherited-from-6","depth":4,"charIndex":3195},{"text":"Defined in","id":"defined-in-6","depth":4,"charIndex":3232}],"domain":"","frontmatter":{},"version":""},{"id":12,"title":"Interface: LoggerModuleOptions","content":"@hikestack/logger • Docs\n\n--------------------------------------------------------------------------------\n\n@hikestack/logger / LoggerModuleOptions\n\n\nInterface: LoggerModuleOptions#\n\n\nProperties#\n\n\nlogger#\n\n> logger: ILogger\n\nDefined in#\n\npackages/logger/src/interfaces/logger-module-options.interface.ts:4","routePath":"/official/reference/logger/interfaces/LoggerModuleOptions","lang":"","toc":[{"text":"Properties","id":"properties","depth":2,"charIndex":183},{"text":"logger","id":"logger","depth":3,"charIndex":197},{"text":"Defined in","id":"defined-in","depth":4,"charIndex":225}],"domain":"","frontmatter":{},"version":""}]